{"version":3,"sources":["components/Button/Button.module.css","components/TaskCounter/TaskCounter.module.css","components/TaskForm/TaskForm.module.css","components/TaskList/TaskList.module.css","components/Layout/Layout.module.css","components/StatusFilter/StatusFilter.module.css","components/Layout/Layout.js","components/Button/Button.js","redux/constants.js","redux/selectors.js","components/StatusFilter/StatusFilter.js","redux/actions.js","components/TaskCounter/TaskCounter.js","components/AppBar/AppBar.js","components/TaskForm/TaskForm.js","components/Task/Task.js","components/TaskList/TaskList.js","components/App.js","redux/reducer.js","redux/store.js","index.js","components/AppBar/AppBar.module.css","components/Task/Task.module.css"],"names":["module","exports","Layout","_ref","children","_jsx","className","css","container","Button","_ref$selected","selected","_ref$type","type","otherProps","_objectWithoutProperties","_excluded","_objectSpread","clsx","btn","_defineProperty","isSelected","statusFilters","Object","freeze","all","active","completed","getTasks","state","tasks","getStatusFilter","filters","status","StatusFilter","dispatch","useDispatch","filter","useSelector","handleFilterChange","payload","_jsxs","wrapper","onClick","TaskCounter","count","reduce","acc","task","text","AppBar","section","title","TaskForm","form","onSubmit","event","preventDefault","target","elements","value","id","nanoid","reset","field","name","placeholder","Task","checkbox","checked","onChange","MdClose","size","TaskList","visibleTasks","statusFilter","getVisibleTasks","list","map","listItem","App","tasksInitialState","filtersInitialState","rootReducer","combineReducers","arguments","length","undefined","action","concat","_toConsumableArray","enhancer","devToolsEnhancer","store","createStore","ReactDOM","createRoot","document","getElementById","render","Provider"],"mappings":"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","file":"static/js/main.c63d943a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__WK3j6\",\"isSelected\":\"Button_isSelected__1lKiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TaskCounter_text__2k4Mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__1h4ho\",\"field\":\"TaskForm_field__2pcfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TaskList_list__5fTqZ\",\"listItem\":\"TaskList_listItem__3PBGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__CV9xd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StatusFilter_wrapper__3fnEj\"};","import css from \"./Layout.module.css\";\r\n\r\nexport const Layout = ({ children }) => {\r\n  return <main className={css.container}>{children}</main>;\r\n};\r\n","import clsx from \"clsx\";\r\nimport css from \"./Button.module.css\";\r\n\r\nexport const Button = ({\r\n  selected = false,\r\n  type = \"button\",\r\n  children,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <button\r\n      className={clsx(css.btn, {\r\n        [css.isSelected]: selected\r\n      })}\r\n      type={type}\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","export const statusFilters = Object.freeze({\r\n  all: \"all\",\r\n  active: \"active\",\r\n  completed: \"completed\",\r\n});\r\n","export const getTasks = state => state.tasks;\r\n\r\nexport const getStatusFilter = state => state.filters.status;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button } from \"components/Button/Button\";\r\nimport { statusFilters } from \"../../redux/constants\";\r\nimport { getStatusFilter } from \"../../redux/selectors\";\r\nimport { setStatusFilter } from \"../../redux/actions\";\r\nimport css from \"./StatusFilter.module.css\";\r\n\r\nexport const StatusFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getStatusFilter);\r\n\r\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <Button\r\n        selected={filter === statusFilters.all}\r\n        onClick={() => handleFilterChange(statusFilters.all)}\r\n      >\r\n        All\r\n      </Button>\r\n      <Button\r\n        selected={filter === statusFilters.active}\r\n        onClick={() => handleFilterChange(statusFilters.active)}\r\n      >\r\n        Active\r\n      </Button>\r\n      <Button\r\n        selected={filter === statusFilters.completed}\r\n        onClick={() => handleFilterChange(statusFilters.completed)}\r\n      >\r\n        Completed\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { nanoid } from \"nanoid\";\r\n\r\nexport const addTask = text => {\r\n  return {\r\n    type: \"tasks/addTask\",\r\n    payload: {\r\n      id: nanoid(),\r\n      completed: false,\r\n      text,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTask = taskId => {\r\n  return {\r\n    type: \"tasks/deleteTask\",\r\n    payload: taskId,\r\n  };\r\n};\r\n\r\nexport const toggleCompleted = taskId => {\r\n  return {\r\n    type: \"tasks/toggleCompleted\",\r\n    payload: taskId,\r\n  };\r\n};\r\n\r\nexport const setStatusFilter = value => {\r\n  return {\r\n    type: \"filters/setStatusFilter\",\r\n    payload: value,\r\n  };\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { getTasks } from \"../../redux/selectors\";\r\nimport css from \"./TaskCounter.module.css\";\r\n\r\nexport const TaskCounter = () => {\r\n  const tasks = useSelector(getTasks);\r\n\r\n  const count = tasks.reduce(\r\n    (acc, task) => {\r\n      if (task.completed) {\r\n        acc.completed += 1;\r\n      } else {\r\n        acc.active += 1;\r\n      }\r\n      return acc;\r\n    },\r\n    { active: 0, completed: 0 }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <p className={css.text}>Active: {count.active}</p>\r\n      <p className={css.text}>Completed: {count.completed}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { StatusFilter } from \"components/StatusFilter/StatusFilter\";\r\nimport { TaskCounter } from \"components/TaskCounter/TaskCounter\";\r\nimport css from \"./AppBar.module.css\";\r\n\r\nexport const AppBar = () => {\r\n  return (\r\n    <header className={css.wrapper}>\r\n      <section className={css.section}>\r\n        <h2 className={css.title}>Tasks</h2>\r\n        <TaskCounter />\r\n      </section>\r\n      <section className={css.section}>\r\n        <h2 className={css.title}>Filter by status</h2>\r\n        <StatusFilter />\r\n      </section>\r\n    </header>\r\n  );\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { Button } from \"components/Button/Button\";\r\nimport { addTask } from \"../../redux/actions\";\r\nimport css from \"./TaskForm.module.css\";\r\n\r\nexport const TaskForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    dispatch(addTask(form.elements.text.value));\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} onSubmit={handleSubmit}>\r\n      <input\r\n        className={css.field}\r\n        type=\"text\"\r\n        name=\"text\"\r\n        placeholder=\"Enter task text...\"\r\n      />\r\n      <Button type=\"submit\">Add task</Button>\r\n    </form>\r\n  );\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { deleteTask, toggleCompleted } from \"../../redux/actions\";\r\nimport css from \"./Task.module.css\";\r\n\r\nexport const Task = ({ task }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => dispatch(deleteTask(task.id));\r\n\r\n  const handleToggle = () => dispatch(toggleCompleted(task.id));\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={css.checkbox}\r\n        checked={task.completed}\r\n        onChange={handleToggle}\r\n      />\r\n      <p className={css.text}>{task.text}</p>\r\n      <button className={css.btn} onClick={handleDelete}>\r\n        <MdClose size={24} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { Task } from \"components/Task/Task\";\r\nimport { getTasks, getStatusFilter } from \"../../redux/selectors\";\r\nimport css from \"./TaskList.module.css\";\r\nimport { statusFilters } from \"../../redux/constants\";\r\n\r\nconst getVisibleTasks = (tasks, statusFilter) => {\r\n  switch (statusFilter) {\r\n    case statusFilters.active:\r\n      return tasks.filter(task => !task.completed);\r\n    case statusFilters.completed:\r\n      return tasks.filter(task => task.completed);\r\n    default:\r\n      return tasks;\r\n  }\r\n};\r\n\r\nexport const TaskList = () => {\r\n  const tasks = useSelector(getTasks);\r\n  const statusFilter = useSelector(getStatusFilter);\r\n  const visibleTasks = getVisibleTasks(tasks, statusFilter);\r\n\r\n  return (\r\n    <ul className={css.list}>\r\n      {visibleTasks.map(task => (\r\n        <li className={css.listItem} key={task.id}>\r\n          <Task task={task} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import { Layout } from \"components/Layout/Layout\";\r\nimport { AppBar } from \"components/AppBar/AppBar\";\r\nimport { TaskForm } from \"components/TaskForm/TaskForm\";\r\nimport { TaskList } from \"components/TaskList/TaskList\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Layout>\r\n      <AppBar />\r\n      <TaskForm />\r\n      <TaskList />\r\n    </Layout>\r\n  );\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { statusFilters } from \"./constants\";\r\n\r\nconst tasksInitialState = [\r\n  { id: 0, text: \"Learn HTML and CSS\", completed: true },\r\n  { id: 1, text: \"Get good at JavaScript\", completed: true },\r\n  { id: 2, text: \"Master React\", completed: false },\r\n  { id: 3, text: \"Discover Redux\", completed: false },\r\n  { id: 4, text: \"Build amazing apps\", completed: false },\r\n];\r\n\r\nconst tasksReducer = (state = tasksInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"tasks/addTask\":\r\n      return [...state, action.payload];\r\n    case \"tasks/deleteTask\":\r\n      return state.filter(task => task.id !== action.payload);\r\n    case \"tasks/toggleCompleted\":\r\n      return state.map(task => {\r\n        if (task.id !== action.payload) {\r\n          return task;\r\n        }\r\n        return { ...task, completed: !task.completed };\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filtersInitialState = {\r\n  status: statusFilters.all,\r\n};\r\n\r\nconst filtersReducer = (state = filtersInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"filters/setStatusFilter\":\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  filters: filtersReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { devToolsEnhancer } from \"@redux-devtools/extension\";\r\nimport { rootReducer } from \"./reducer\";\r\n\r\nconst enhancer = devToolsEnhancer();\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import ReactDOM from \"react-dom/client\";\r\nimport { Provider } from \"react-redux\";\r\nimport { App } from \"components/App\";\r\nimport { store } from \"./redux/store\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AppBar_wrapper__35rok\",\"section\":\"AppBar_section__39V8L\",\"title\":\"AppBar_title__2Vmp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Task_wrapper__ROFhn\",\"text\":\"Task_text__2RvHH\",\"btn\":\"Task_btn__o6HH7\",\"checkbox\":\"Task_checkbox__3bUye\"};"],"sourceRoot":""}